Installation: - https://nodejs.org/en/ - Install - Open cmd and type: node -v to get version of installed node

What is node.js: - JS can be used on server side - can create backend apps - Node.js is JS runtime - Integration with file systems so that you can read and write from disk - chrome sends JS code to V8 engine and V8 sends results to the chrome same with node
node.js send JS to V8 engine and V8 sends results to node - Node.js does not have window instead it has global (open cmd=> type node=> type global) - Node.js does not have document instead it has process (open cmd=> type node=> type process)

Why node.js: - non-blocking I/O : reading data from file, communication with servers - as node.js is non blocking IO it will continue to execute other process until it get response from servers etc. - Lightweight

File system module: https://nodejs.org/docs/latest/api/fs.html

One file cannot access the variables from other files though we load files
To share we need to export the module and then files can share the variables
Whatever we add in module.exports other will get access to that after importing

Initialize npm: npm init
npms: https://www.npmjs.com/
validator: https://www.npmjs.com/package/validator

nodemon:
npm i nodemon -g: installing module globally
when we install module globally it you will not see it in package.json coz you are installing it on your machine
Using nodemon you dont need to run node command everytime you change the file
use nodemon app.js instead node.js

process.argv used to get input from user
process.argv will give 2 default strings
1st is path to node executable on machine
2nd path to app.js, here notes-app-main.js
3rd is the value that we provide while running node notes-app-main.js value
console.log("process.argv:" + "\n", process.argv);

yargs: https://www.npmjs.com/package/yargs
when we run node notes-app-main.js add --title:"Hello" | It will show --title="Hello" in cmd and in order to get title:hello we need to perform various operations
and yargs helps us to pass arguments easily
When we run yargs.argv we will get object with 2 properties \_:[] this is args which we add, and $0:filename
node filename --help

yargs.command():

- It contains of object which consists of command which is command name
- describe which is command description
- handler which is a function which take argv as a argument and gives us values
- builder which also takes a object which consist of title which is again an object which consists of description
- simply run node filename command --builder command:"Title"
- here, node notes-app-main.js add --title="Shopping list"

Debugging node application: - using console.log - using debugger: - instead of console.log() write only "debugger" and in cmd instead of node app.js write node inspect app.js - Now go to chrome and search node://inspect - click inspect - click add workspace and add app folder - Start debugging - Play with console

Weather api: weatherstack.com
npm request: https://www.npmjs.com/package/request
npm request (alternative): https://www.npmjs.com/package/postman-request

weather app:

1. package.json: npm init => cut current line => npm init -y (set all values automatically)
2. Explore more about weatherstack: https://weatherstack.com/documentation
3. mapbox: https://mapbox.com/ => spi docs => search => geocoding

Chrome extension: json formatter
